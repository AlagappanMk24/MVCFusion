@using RedisCache.Application.DTOs
@model List<CacheEntryDto>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Redis Cache Demo - MVCFushion</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/css/site.css" rel="stylesheet">
</head>
<body>
    <div class="container py-5">
        <div class="header">
            <h1>Redis Cache</h1>
            <p>Manage key-value pairs with Redis caching</p>
        </div>

        <div class="form-container">
            <form id="storeForm" asp-action="Store" method="post" class="mb-3">
                <h3>Store Key-Value Pair</h3>
                <div class="row g-3">
                    <div class="col-md-5">
                        <input type="text" asp-for="@(new CacheEntryViewModel().Key)"
                               class="form-control" placeholder="Enter key" required>
                    </div>
                    <div class="col-md-5">
                        <input type="text" asp-for="@(new CacheEntryViewModel().Value)"
                               class="form-control" placeholder="Enter value" required>
                    </div>
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-primary w-100">
                            <span id="storeBtnText">Store</span>
                            <span id="storeSpinner" class="spinner spinner-border spinner-border-sm ms-2" role="status" aria-hidden="true"></span>
                        </button>
                    </div>
                </div>
            </form>

            <div class="row g-3">
                <div class="col-md-6">
                    <form id="retrieveForm" asp-action="Retrieve" method="post">
                        <div class="input-group">
                            <input type="text" name="key" class="form-control" placeholder="Enter key to retrieve" required>
                            <button type="submit" class="btn btn-secondary">
                                <span id="retrieveBtnText">Retrieve</span>
                                <span id="retrieveSpinner" class="spinner spinner-border spinner-border-sm ms-2" role="status" aria-hidden="true"></span>
                            </button>
                        </div>
                    </form>
                </div>
                <div class="col-md-6">
                    <form id="deleteForm" asp-action="Delete" method="post">
                        <div class="input-group">
                            <input type="text" name="key" class="form-control" placeholder="Enter key to delete" required>
                            <button type="submit" class="btn btn-danger">
                                <span id="deleteBtnText">Delete</span>
                                <span id="deleteSpinner" class="spinner spinner-border spinner-border-sm ms-2" role="status" aria-hidden="true"></span>
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            @if (ViewBag.SuccessMessage != null)
            {
                <div class="alert alert-success mt-3 animate__animated animate__fadeIn">
                    @ViewBag.SuccessMessage
                </div>
            }
            @if (ViewBag.ErrorMessage != null)
            {
                <div class="alert alert-danger mt-3 animate__animated animate__shakeX">
                    @ViewBag.ErrorMessage
                </div>
            }
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger mt-3 animate__animated animate__shakeX">
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <p>@error.ErrorMessage</p>
                    }
                </div>
            }
        </div>

        <div class="table-container">
            <h2 class="mb-4">Cached Entries</h2>
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Key</th>
                                <th>Value</th>
                                <th>Created At</th>
                                <th>Hits</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var entry in Model)
                            {
                                <tr>
                                    <td class="short-url">@entry.Key</td>
                                    <td class="original-url" title="@entry.Value">@entry.Value</td>
                                    <td>@entry.CreatedAt.ToString("g")</td>
                                    <td>@entry.HitCount</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <p class="text-muted">No cache entries yet. Start by storing a key-value pair above!</p>
            }
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js"></script>
</body>
</html>